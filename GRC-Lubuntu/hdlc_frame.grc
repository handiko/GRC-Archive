<?xml version='1.0' encoding='utf-8'?>
<?grc format='1' created='3.7.10'?>
<flow_graph>
  <timestamp>Sun Apr  1 18:41:00 2018</timestamp>
  <block>
    <key>options</key>
    <param>
      <key>author</key>
      <value></value>
    </param>
    <param>
      <key>window_size</key>
      <value></value>
    </param>
    <param>
      <key>category</key>
      <value>[GRC Hier Blocks]</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>description</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(8, 12)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>generate_options</key>
      <value>qt_gui</value>
    </param>
    <param>
      <key>hier_block_src_path</key>
      <value>.:</value>
    </param>
    <param>
      <key>id</key>
      <value>hdlc_Frame</value>
    </param>
    <param>
      <key>max_nouts</key>
      <value>0</value>
    </param>
    <param>
      <key>qt_qss_theme</key>
      <value></value>
    </param>
    <param>
      <key>realtime_scheduling</key>
      <value></value>
    </param>
    <param>
      <key>run_command</key>
      <value>{python} -u {filename}</value>
    </param>
    <param>
      <key>run_options</key>
      <value>run</value>
    </param>
    <param>
      <key>run</key>
      <value>True</value>
    </param>
    <param>
      <key>thread_safe_setters</key>
      <value></value>
    </param>
    <param>
      <key>title</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(296, 12)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>message</value>
    </param>
    <param>
      <key>value</key>
      <value>'a',0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0</value>
    </param>
  </block>
  <block>
    <key>variable</key>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(200, 12)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>samp_rate</value>
    </param>
    <param>
      <key>value</key>
      <value>48e3</value>
    </param>
  </block>
  <block>
    <key>blocks_message_debug</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(1000, 80)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_message_debug_0</value>
    </param>
  </block>
  <block>
    <key>blocks_message_debug</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(920, 216)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_message_debug_1</value>
    </param>
  </block>
  <block>
    <key>blocks_message_strobe_random</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>dist</key>
      <value>blocks.STROBE_POISSON</value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(56, 108)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_message_strobe_random_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>mean</key>
      <value>10000</value>
    </param>
    <param>
      <key>msg</key>
      <value>pmt.intern("TEST")</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>std</key>
      <value>500</value>
    </param>
  </block>
  <block>
    <key>blocks_random_pdu</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>mask</key>
      <value>0xFF</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(96, 228)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>blocks_random_pdu_0</value>
    </param>
    <param>
      <key>length_modulo</key>
      <value>2</value>
    </param>
    <param>
      <key>maxsize</key>
      <value>64</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minsize</key>
      <value>16</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>digital_hdlc_deframer_bp</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(768, 132)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_hdlc_deframer_bp_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>max</key>
      <value>500</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>min</key>
      <value>32</value>
    </param>
  </block>
  <block>
    <key>digital_hdlc_framer_pb</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>frame_tag_name</key>
      <value>packet_len</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(480, 140)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>digital_hdlc_framer_pb_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
  </block>
  <block>
    <key>epy_block</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>_io_cache</key>
      <value>('hdlc_to_ax25', 'blk', [], [('in', 'message')], [], '\n    Converts an array of bytes into a AX25Packet object.\n\n    Connect to the "HDLC Deframer", or a block which emits a PMT tuple of\n    (None, bytearray)\n\n    This module maintains statistics of packets seen in .count and .dropped\n\n    .dropped counts the packets that failed do unpack due to state machine\n    violations. Since the HDLC Deframer block silently drops packets that fail\n    to match the checksum, we are unable to know how many packets failed.\n\n    .count counts the number of APRS packets received. (For now, this library\n    is only focusing on APRS)\n    ', [])</value>
    </param>
    <param>
      <key>_source_code</key>
      <value>"""
Embedded Python Blocks:

Each time this file is saved, GRC will instantiate the first class it finds
to get ports and parameters of your block. The arguments to __init__  will
be the parameters. All of them are required to have default values!
"""

import os, pty
import struct

import pmt
from gnuradio import gr
from datetime import datetime

import packet


class blk(gr.sync_block):  # other base classes are basic_block, decim_block, interp_block
    """
    Converts an array of bytes into a AX25Packet object.

    Connect to the "HDLC Deframer", or a block which emits a PMT tuple of
    (None, bytearray)

    This module maintains statistics of packets seen in .count and .dropped

    .dropped counts the packets that failed do unpack due to state machine
    violations. Since the HDLC Deframer block silently drops packets that fail
    to match the checksum, we are unable to know how many packets failed.

    .count counts the number of APRS packets received. (For now, this library
    is only focusing on APRS)
    """
    def __init__(self):
        gr.sync_block.__init__(self,
                               name="hdlc_to_ax25",
                               in_sig=None,
                               out_sig=None)

        (self.pty_master, self.pty_slave) = pty.openpty()
        tty = os.ttyname(self.pty_slave)

        if os.path.islink('/tmp/kiss_pty'):
            os.unlink('/tmp/kiss_pty')
        os.symlink(tty, '/tmp/kiss_pty')

        print 'KISS PTY is: /tmp/kiss_pty (%s)' % os.ttyname(self.pty_slave)

        self.message_port_register_in(pmt.intern('in'))
        self.set_msg_handler(pmt.intern('in'), self.handle_msg)
        self.count = 0
        self.dropped = 0

    def handle_msg(self, msg_pmt):
        msg_pmt = pmt.pmt_to_python.pmt_to_python(msg_pmt)
        if not isinstance(msg_pmt, tuple):
            return
        if len(msg_pmt) != 2:
            return

        msg = bytearray(msg_pmt[1])

        try:
            pkt = packet.from_bytes(msg)
            # TODO: Forward this packet on to other modules
            print packet.dump(pkt)

            if pkt.control == 0x03 and pkt.protocol_id == 0xf0:
                os.write(self.pty_master, packet.kiss_wrap_bytes(msg))
                self.count += 1
        except ValueError as e:
            print e
            self.dropped += 1

        print 'Count:', self.count
        print 'Dropped:', self.dropped
        print '-'*8

    def stop(self):
        print 'Closing PTYs'
        os.close(self.pty_master)
        os.close(self.pty_slave)
        try:
            os.unlink('/tmp/kiss_pty')
        except OSError:
            pass

        gr.sync_block.stop(self)
</value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(632, 288)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>epy_block_0</value>
    </param>
  </block>
  <block>
    <key>qtgui_edit_box_msg</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>True</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(304, 316)</value>
    </param>
    <param>
      <key>gui_hint</key>
      <value></value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>qtgui_edit_box_msg_0</value>
    </param>
    <param>
      <key>key</key>
      <value></value>
    </param>
    <param>
      <key>label</key>
      <value></value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>is_pair</key>
      <value>False</value>
    </param>
    <param>
      <key>is_static</key>
      <value>False</value>
    </param>
    <param>
      <key>type</key>
      <value>string</value>
    </param>
    <param>
      <key>value</key>
      <value></value>
    </param>
  </block>
  <block>
    <key>satellites_pdu_to_kiss</key>
    <param>
      <key>alias</key>
      <value></value>
    </param>
    <param>
      <key>comment</key>
      <value></value>
    </param>
    <param>
      <key>affinity</key>
      <value></value>
    </param>
    <param>
      <key>_enabled</key>
      <value>1</value>
    </param>
    <param>
      <key>_coordinate</key>
      <value>(408, 256)</value>
    </param>
    <param>
      <key>_rotation</key>
      <value>0</value>
    </param>
    <param>
      <key>id</key>
      <value>satellites_pdu_to_kiss_0</value>
    </param>
    <param>
      <key>maxoutbuf</key>
      <value>0</value>
    </param>
    <param>
      <key>minoutbuf</key>
      <value>0</value>
    </param>
  </block>
  <connection>
    <source_block_id>blocks_message_strobe_random_0</source_block_id>
    <sink_block_id>blocks_random_pdu_0</sink_block_id>
    <source_key>strobe</source_key>
    <sink_key>generate</sink_key>
  </connection>
  <connection>
    <source_block_id>blocks_random_pdu_0</source_block_id>
    <sink_block_id>satellites_pdu_to_kiss_0</sink_block_id>
    <source_key>pdus</source_key>
    <sink_key>in</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_hdlc_deframer_bp_0</source_block_id>
    <sink_block_id>blocks_message_debug_0</sink_block_id>
    <source_key>out</source_key>
    <sink_key>print_pdu</sink_key>
  </connection>
  <connection>
    <source_block_id>digital_hdlc_framer_pb_0</source_block_id>
    <sink_block_id>digital_hdlc_deframer_bp_0</sink_block_id>
    <source_key>0</source_key>
    <sink_key>0</sink_key>
  </connection>
  <connection>
    <source_block_id>satellites_pdu_to_kiss_0</source_block_id>
    <sink_block_id>digital_hdlc_framer_pb_0</sink_block_id>
    <source_key>out</source_key>
    <sink_key>in</sink_key>
  </connection>
</flow_graph>
